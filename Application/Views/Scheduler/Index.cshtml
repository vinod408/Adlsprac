@{

    ViewBag.Title = "Schedular Page";
    Layout = "~/Views/Shared/_EventLayout.cshtml";
}
   
<div id="scheduler"></div>

<script>

    $(function() {
        $("#scheduler").kendoScheduler({
            date: new Date(),
            height: 400,
            width: 600,
            views: [
               "day",
               { type: "month",selected: true },
               "week",
               "month",
            ],
            dataSource: {
                batch: true,
                transport: {
                    read: {
                        url: "@Url.Action("GetCalendarEvents", "Scheduler")",
                        dataType: "jsonp"
                    },
                    update: {
                        url: "@Url.Action("Update", "Scheduler")",
                        dataType: "jsonp"
                    },
                    create: {
                        url: "@Url.Action("Create", "Scheduler")",
                        dataType: "jsonp",
                        complete: function (e) {
                            $("#scheduler").data("kendoScheduler").dataSource.read();
                        }
                    },
                    destroy: {
                        url: "@Url.Action("Destroy", "Scheduler")",
                        dataType: "jsonp"
                    },
                    parameterMap: function(options,operation) {
                        if (operation !== "read" && options.models) {
                            return { models: kendo.stringify(options.models) };
                        }
                    }
                },
                schema: {
                    model: {
                        id: "taskId",
                        fields: {
                            taskId: { from: "TaskID",type: "number" },
                            title: { from: "Title",defaultValue: "No title",validation: { required: true } },
                            start: { type: "date",from: "Start" },
                            end: { type: "date",from: "End" },
                            startTimezone: { from: "StartTimezone" },
                            endTimezone: { from: "EndTimezone" },
                            description: { from: "Description" },
                            recurrenceId: { from: "RecurrenceID" },
                            recurrenceRule: { from: "RecurrenceRule" },
                            recurrenceException: { from: "RecurrenceException" },
                            isAllDay: { type: "boolean",from: "IsAllDay" }
                        }
                    }
                },
            }
        });
    });
    dataSource.fetch(function () {
        var event = this.at(0);
        console.log(event.start);
    });
</script>
